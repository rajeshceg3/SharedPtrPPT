name: Slidev CI/CD

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-deploy: # Combined build and conditional deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read # Needed for checkout
      # deployments: write # Uncomment if using GitHub environments and deployments
      # pull-requests: write # Optional: for adding comments to PRs with deployment links

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # Using a recent LTS version

      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # Updated to v3
        with:
          # version: 8 # Optionally specify pnpm version, otherwise latest
          run_install: false # We will run install manually

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # Use --frozen-lockfile for CI

      - name: Build Presentation
        run: pnpm build # This uses "slidev build --theme seriph" from package.json

      - name: Test for Build Output
        run: |
          echo "Checking for build output..."
          ls -R dist
          if [ ! -f "dist/index.html" ]; then
            echo "Error: dist/index.html not found!"
            exit 1
          fi
          echo "Build output verified."

      - name: Archive Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: slidev-presentation-dist
          path: dist/

      # Conditional Deployment to Netlify on pushes to main/master
      # This section is prepared but commented out as it requires secrets.
      # The user needs to configure NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID in GitHub secrets.
      # - name: Deploy to Netlify
      #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      #   uses: nwtgck/actions-netlify@v2 # Or use official netlify/actions/cli
      #   with:
      #     publish-dir: './dist'
      #     production-branch: 'main' # Or 'master' depending on your default branch
      #     # The build command is run by the 'Build Presentation' step above.
      #     # Netlify can also run the build if configured in netlify.toml,
      #     # but running it here ensures the CI environment builds it.
      #     # For this action, Netlify might try to rebuild unless specific flags are used.
      #     # Simpler approach: deploy pre-built site.
      #     deploy-message: "Deploy from GitHub Actions - ${{ github.sha }}"
      #     enable-pull-request-comment: true
      #     enable-commit-comment: true
      #     overwrites-pull-request-comment: true
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #   timeout-minutes: 3

      # Alternative Netlify Deployment using Netlify CLI (more control)
      # This also requires secrets and assumes Netlify CLI is installed or set up via another action.
      # - name: Deploy to Netlify via CLI
      #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      #   run: |
      #     # pnpm global add netlify-cli # Ensure Netlify CLI is available
      #     # netlify deploy --prod --dir=dist --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --site ${{ secrets.NETLIFY_SITE_ID }}
      #   # To avoid rebuilding on Netlify and just upload files from `dist`:
      #   # netlify deploy --prod --dir=dist --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --site ${{ secrets.NETLIFY_SITE_ID }}
      #   # Add --build flag if you want Netlify to run build command from netlify.toml
      #   # e.g., netlify deploy --prod --build --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --site ${{ secrets.NETLIFY_SITE_ID }}
      #   # However, the build is already done in a previous step.
      #   # So, a direct deploy of the 'dist' folder is usually what's wanted.
      #   env:
      //     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      //     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      #   # Note: The above env vars for the run step might need to be explicitly passed to commands
      #   # depending on the shell and action version.
      #   # The nwtgck/actions-netlify action handles this more seamlessly.

# Instructions for the user regarding Netlify deployment:
# 1. This workflow builds the Slidev presentation and archives the 'dist' folder as an artifact.
# 2. To enable deployment to Netlify:
#    a. Uncomment one of the "Deploy to Netlify" sections above.
#       The `nwtgck/actions-netlify@v2` action is generally easier to use for deploying pre-built sites.
#    b. Create the following secrets in your GitHub repository settings (under Security > Secrets and variables > Actions):
#       - NETLIFY_AUTH_TOKEN: Your Netlify personal access token.
#       - NETLIFY_SITE_ID: Your Netlify site's API ID (not the site name).
#    c. Ensure the `publish-dir` in the workflow matches your build output directory (`dist/`).
#    d. The `netlify.toml` file in the repository has a build command:
#       `command = "pnpm build --theme seriph --style style.css"`
#       The CI workflow uses `pnpm build` which resolves to `slidev build --theme seriph`
#       from `package.json`. This is generally fine as the theme should be picked up.
#       If you use the Netlify action to *build and deploy*, it will use the command from `netlify.toml`.
#       If you use the Netlify action to *only deploy a pre-built directory*, ensure the `publish-dir` is correct.
#       The current commented out example `nwtgck/actions-netlify@v2` is configured to publish a pre-built directory.
#
# For PRs, Netlify typically creates preview deployments automatically if your site is linked to your GitHub repo on Netlify's platform.
# The explicit deployment step in the CI for PRs might be redundant if that link is active,
# but `enable-pull-request-comment: true` can be useful for posting the preview URL back to the PR.

# End of workflow file
